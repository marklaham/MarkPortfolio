{"version":3,"sources":["components/Header.js","components/Footer.js","components/NavTabs.js","components/pages/Resume.js","components/pages/About.js","components/pages/Projects.js","components/pages/Contact.js","components/PortfolioContainer.js","App.js","index.js"],"names":["styles","headerStyle","background","headingStyle","fontSize","headerFont","fontColor","Header","style","className","footerStyle","h1Style","Footer","NavTabs","currentPage","handlePageChange","href","onClick","Resume","About","Container","Row","Col","xs","md","Image","src","roundedCircle","Projects","Array","from","length","map","_","idx","Card","Img","variant","Body","Title","Text","Contact","Form","Group","controlId","Label","Control","type","placeholder","as","rows","Button","value","PortfolioContainer","useState","setCurrentPage","page","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84601017.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Header.css';\r\n\r\n// By importing the Header.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  headerStyle: {\r\n    background: 'blue',\r\n  },\r\n  headingStyle: {\r\n    fontSize: '40px',\r\n  },\r\n  headerFont: {\r\n    fontColor: 'White',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={styles.headerStyle} className=\"header\">\r\n      <h1 style={styles.headingStyle}>Mark's Portfolio</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n//import '../styles/Header.css';\r\n\r\n// By importing the Header.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  footerStyle: {\r\n    background: 'Blue',\r\n  },\r\n  h1Style: {\r\n    fontSize: '25px',\r\n  },\r\n  headerFont: {\r\n    fontColor: 'White',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={styles.footerStyle} className=\"footer\">\r\n      <h1 style={styles.h1Style}>@marklaham</h1>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n        <a\n          href=\"#about\"\n          onClick={() => handlePageChange('About')}\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n        >\n          About\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#projects\"\n          onClick={() => handlePageChange('Projects')}\n          className={currentPage === 'Projects' ? 'nav-link active' : 'nav-link'}\n        >\n          Projects\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#resume\"\n          onClick={() => handlePageChange('Resume')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\n        >\n          Resume\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact Me\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from 'react';\n\nexport default function Resume() {\n  return (\n    <div>\n      <h1>Resume</h1>\n      <pre>{`\n      Front-end web developer leveraging a background in stress/change management to \n      provide unique perspectives on how end-users interact with websites and software \n      platforms. Earned a certificate in Full Stack Web Development from the Carleton \n      University Coding Boot Camp. Innovative problem-solver who is passionate about \n      developing apps with a focus on mobile-first design and development. Strengths \n      in creativity, teamwork, and building projects from ideation to execution.\n\n      TECHNICAL SKILLS\n      Languages: JavaScript ES6+, Java, CSS3, HTML5, SQL, NoSQL\n      Applications: GitHub, MongoDB, MySQL \n      Tools: Express, React, Node, Handlebars, Query, Bootstrap\n\n      PROJECTS \n\n      WeatherApp | Written link to GitHub | Written link to deployed project \n      Summary: Weather app that provides current and future weather forecasts in cities.\n      Role: Sole author \n      Tools: HTML, CSS, JavaScript, jQuery, API, Bootstrap,\n\n      Soccer Field Booking System | Written link to GitHub | Written ink to deployed project  \n      Summary: Allows soccer coaches to book fields for the games/practice\n      Role: Back end designer \n      Tools: Express, Express Handlebars, MySQL, JavaScript, jQuery, ORM, Bootstrap\n\n      EXPERIENCE\n\n      Business Development/Cohort Member \t\t\t\t     Feb 2018 - April 2018\n\n      Elmy Canada - Techstars Accelerator Program\n      Developed a user-friendly webpage to bring attention to shelter needs, \n      events, and services. A Job Description can not fully describe what I learned \n      from my Techstar experience.  We were introduced to hundreds of industry mentors,\n       investors, and Coaches and were working 13 hours days 7 days per week.\n      Customer onboarding and retention - UI/UX design - Trade show presentations \n      Organized/Host/present Meetups - Developed partnerships with Trade Schools \n      Learned from industry leaders on, marketing, sales, branding, pitching, growth hacks, etc.\n\n\n      Stress Management Consultant 2004 - 2020\n\n      Designed and developed several websites using WordPress, Shopify, Wix, and HTML.\n      Other Software used: Microsoft Dynamics 365,  Hubspot, Leadpages, Infusionsoft, Zapier, \n      Active Campaign, Drip, Mailchimp, and many more. \n      Creating, designing, promoting retreats, training, workshops, and digital products.\n      Development and implementation of many 50 and 200 hr training programs, workshops, retreats, \n      and seminars both in the corporate realm and yoga industry.\n      Lead hundreds of stress management, health and wellness, and leadership workshops for companies \n      such as Microsoft, Lixar, Medical Council of Canada, Public Health Agency of Canada, Mitel, Alcatel, \n      Industry Canada, Treasury Boards, and many more.\n      Gave presentations and workshops at The Toronto International Yoga Conference, The Vancouver Yoga Conference, \n      International Hong Kong Yoga Conference, The Toronto Whole Life Expo, The Vancouver Men’s Show, and more.\n\n\n      Royal Canadian Mounted Police \t\t\t\t\t\t\t2002-2004\n      Java Developer\t\t  \t\t\t\t\t\t\tOttawa, ON\t \n      Worked on the National Criminal Data Bank used by all Canadian police forces to \n      information on organized crime. \n      Java,  HTML  mostly focused on UI and Middle tier.  \n      Creating and running test scripts using IBM’s  Rational. \n      Implementation and debugging new App features. \n      Maintenance of test database.\n      Handled incoming support from Clients.\n\n\n      EDUCATION \n\n      Certificate, Full Stack Web Development – Carleton University         Ottawa, ON                                                          \n      Computer Math  – Carleton University                                  Ottawa, ON `  \n                                                                    }                                                          \n        </pre>\n    </div>\n  );\n}\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\n\n\nexport default function About() {\n  return (\n    <div>\n      <h1>About Mark</h1>\n      <Container>\n  <Row>\n  \n    <Col xs={6} md={4}>\n      <Image src=\"./Images/MArkBioPhoto.jpg\" roundedCircle />\n    </Col>\n  </Row>\n</Container>\n      <p>\n      Front-end web developer leveraging a background in stress/change management to provide unique perspectives on how end-users interact with websites and software platforms. Earned a certificate in Full Stack Web Development from the Carleton University Coding Boot Camp. Innovative problem-solver who is passionate about developing apps with a focus on mobile-first design and development. Strengths in creativity, teamwork, and building projects from ideation to execution.\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n// const array = [\n\n\n\n// ];\n\nexport default function Projects() {\n  return (\n    <div>\n      <h1>My Projects</h1>\n      <p>\n        Donec a volutpat quam. Curabitur nec varius justo, sed rutrum ligula.\n      \n      </p>\n      <Row xs={1} md={2} className=\"g-4\">\n        {Array.from({ length: 6 }).map((_, idx) => (\n          <Col>\n            <Card>\n              <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n              <Card.Body>\n                <Card.Title>Card title</Card.Title>\n                <Card.Text>\n                  This is a longer card with supporting text below as a natural\n                  lead-in to additional content. This content is a little bit longer.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Contact() {\n  return (\n    <div>\n      <h1>Contact Mark</h1>\n      <Form>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Text</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlSubmit1\">\n      <Button as=\"input\" type=\"submit\" value=\"Submit\" />{' '}\n      \n      </Form.Group>\n    </Form>\n  </div> \n\n  );\n}","import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport Resume from './pages/Resume';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\n\nexport default function PortfolioContainer() {\n  const [currentPage, setCurrentPage] = useState('About');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Resume') {\n      return <Resume />;\n    }\n    if (currentPage === 'About') {\n      return <About />;\n    }\n    if (currentPage === 'Projects') {\n      return <Projects />;\n    }\n    return <Contact />;\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer'; \nimport PortfolioContainer from \"./components/PortfolioContainer\";\n\nclass App extends Component {\n    render() {\n      return (\n        <div>\n          <Header />\n          <PortfolioContainer />\n          <Footer />\n          \n        </div>\n      );\n    }\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}